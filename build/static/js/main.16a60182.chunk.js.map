{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKA6BeA,EA3BG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,uCAAf,uBAAiEH,EAAMO,QACvE,+BACI,6BACI,6CAAgBP,EAAMQ,WAE1B,6BACI,iDAAoBR,EAAMS,eAE9B,6BACI,6CAAgBT,EAAMU,iBAIlC,qBAAKP,UAAU,YAAf,SACKF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OAAiB,uBAAkBV,UAAU,2FAA5B,cAAyHS,IAA9GC,YCAvCC,EArBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACnB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACI,qBAAKf,UAAU,iDAAf,SACI,sBAAMgB,SANG,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAImBd,UAAU,kBAApC,SACI,sBAAKA,UAAU,6DAAf,UACI,uBAAOmB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQrB,UAAU,mHAAmHsB,KAAK,OAAOC,YAAY,oBACpM,wBAAQvB,UAAU,uHAAuHsB,KAAK,SAA9I,4BCmBLE,MA7Bf,WAEE,MAA4BX,mBAAS,IAArC,mBAAOY,EAAP,KAAeC,EAAf,KACA,EAAkCb,oBAAS,GAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KAYA,OAVAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,oCAAjC,cAA4EJ,EAA5E,kCACFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACX,IAGF,sBAAK7B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OACzCa,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI3C,UAAU,qCAAd,8BACrC2B,EAAY,oBAAI3B,UAAU,qCAAd,wBAAqE,qBAAKA,UAAU,yBAAf,SAC/EyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM+C,aCpBhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.16a60182.chunk.js","sourcesContent":["import React from 'react'\n\nconst ImageCard = ({ image }) => {\n    const tags = image.tags.split(',')\n\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n            <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-blue-500 text-xl mb-2\">Photo by: {image.user}</div>\n                <ul>\n                    <li>\n                        <strong>Views: {image.views}</strong>\n                    </li>\n                    <li>\n                        <strong>Downloads: {image.downloads}</strong>\n                    </li>\n                    <li>\n                        <strong>Likes: {image.likes}</strong>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"px-6 py-4\">\n                {tags.map((tag, index) => (<span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">#{tag}</span>))}\n            </div>\n        </div>\n    )\n}\n\nexport default ImageCard;\n","import React, { useState } from 'react'\n\nconst ImageSearch = ({ searchText }) => {\n    const [text, setText] = useState('')\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        searchText(text)\n    }\n    return (\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\n            <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n                    <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-black-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search Image...\" />\n                    <button className=\"flex-shrink-0 bg-blue-700 hover:bg-blue-700 hover:border-blue-700 text-lg font-semibold text-white py-1 px-2 rounded\" type=\"submit\">\n                        Search\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ImageSearch\n","import React, { useState, useEffect } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport ImageSearch from \"./components/ImageSearch\";\n\nfunction App() {\n\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('')\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n      .then(res => res.json())\n      .then(data => {\n        setImages(data.hits);\n        setIsLoading(false)\n      })\n      .catch(err => console.log(err))\n  }, [term])\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n      {!isLoading && images.length === 0 && <h1 className=\"text-6xl text-center mx-auto mt-32\">No Images Found.</h1>}\n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> : <div className=\"grid grid-cols-4 gap-2\">\n        {images.map(image => (\n          <ImageCard key={image.id} image={image} />\n        ))}\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}